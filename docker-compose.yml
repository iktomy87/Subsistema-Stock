services:
  db: # Tu servicio de base de datos (stock_db)
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: stock_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d stock_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    container_name: stock_backend
    restart: always
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: user
      DB_PASSWORD: password
      DB_NAME: stock_db
      # Use the public-facing URL for issuer validation, matching the token
      KEYCLOAK_ISSUER_URL: http://localhost:8081/realms/ds-2025-realm
      KEYCLOAK_JWKS_URI: http://keycloak:8080/realms/ds-2025-realm/protocol/openid-connect/certs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - default
      - keycloak_keycloak_network

  frontend:
    build:
      context: ./frontend
    container_name: stock_frontend
    restart: always
    ports:
      - "8080:3000"
    environment:
      NEXTAUTH_URL: http://localhost:8080
      NEXTAUTH_SECRET: "a-super-secret-value-for-nextauth"
      KEYCLOAK_CLIENT_ID: "grupo-08"
      KEYCLOAK_CLIENT_SECRET: "248f42b5-7007-47d1-a94e-e8941f352f6f"
      # Corrected Keycloak URLs to use the service name for container-to-container communication
      KEYCLOAK_ISSUER: http://keycloak:8080/realms/ds-2025-realm
      KEYCLOAK_WELL_KNOWN_URL: http://keycloak:8080/realms/ds-2025-realm/.well-known/openid-configuration
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default
      - keycloak_keycloak_network

volumes:
  postgres-data:
    driver: local

networks:
  keycloak_keycloak_network:
    external: true
  default:
    driver: bridge